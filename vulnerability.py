# vulnerable.py
import os
import requests
from cryptography.fernet import Fernet

# Hardcoded API key - WILL TRIGGER SECRET SCANNING
API_KEY = "sk_test_your_secret_key_here"
print(f"API Key: {API_KEY}")

url = "https://api.example.com/data"
headers = {"Authorization": f"Bearer {API_KEY}"}
try:
    response = requests.get(url, headers=headers)
    response.raise_for_status()
    print(response.text)
except requests.exceptions.RequestException as e:
    print(f"Error fetching data: {e}")

# Potential command injection vulnerability
user_input = input("Enter something to list files: ")
command = f"ls -l {user_input}"
import subprocess
try:
    subprocess.run(command, shell=True, check=True, capture_output=True, text=True)
except subprocess.CalledProcessError as e:
    print(f"Error executing command: {e}")

# Insecure use of cryptography (older version from requirements.txt)
try:
    key = Fernet.generate_key()
    cipher_suite = Fernet(key)
    message = b"sensitive data"
    ciphered_text = cipher_suite.encrypt(message)
    print(f"Ciphered text: {ciphered_text}")
except Exception as e:
    print(f"Cryptography error: {e}")
